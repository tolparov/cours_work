package ru.sber.poirot.ai.chat.client

import org.springframework.beans.factory.annotation.Value
import org.springframework.stereotype.Service
import org.springframework.web.reactive.function.client.WebClient
import ru.sber.poirot.ai.chat.config.AiChatProperties
import ru.sber.poirot.ai.chat.dto.AskDto
import ru.sber.poirot.ai.chat.dto.agent.AiAgentRequest
import ru.sber.poirot.ai.chat.dto.agent.ModelSettingsDto
import ru.sber.poirot.webclient.dsl.DslWebClient
import ru.sber.poirot.webclient.dsl.post
import ru.sber.utils.Retry

@Service
class AiChatClientImpl(
    builder: WebClient.Builder,
    private val props: AiChatProperties,

    @Value("\${ai-chat.client.timeoutMs:0}") private val timeoutMs: Long,
    @Value("\${ai-chat.client.retry.count:0}") retryCount: Int,
    @Value("\${ai-chat.client.retry.repeatDelayInSec:30}") retryRepeatDelayInSec: Long
) {
    private val client = DslWebClient(
        webClient = builder.clone().build(),
        retry = Retry(retryCount, retryRepeatDelayInSec)
    )

    suspend fun sendMessage(request: AskDto): String? {
        val url = props.url.replace("{threadUid}", request.threadUid)

        val model = props.modelSettings
        val modelSettings = ModelSettingsDto(
            max_tokens = model.maxTokens,
            model = model.model,
            repetition_penalty = model.repetitionPenalty,
            temperature = model.temperature,
            top_p = model.topP
        )

        val body = AiAgentRequest(
            message = request.message,
            modelSettings = modelSettings,
            attachments = null
        )

        return client.post<String> {
            path = url
            this.body = body
        }
    }
}

package ru.sber.poirot.ai.chat.config

import org.springframework.boot.context.properties.ConfigurationProperties
import org.springframework.context.annotation.Configuration

@Configuration
@ConfigurationProperties(prefix = "ai-chat.agent")
data class AiChatProperties(
    var url: String = "",
    var modelSettings: ModelSettings = ModelSettings()
) {
    data class ModelSettings(
        var maxTokens: Int = 1024,
        var model: String = "GigaChat-2-Max",
        var repetitionPenalty: Double = 1.0,
        var temperature: Double = 1.0,
        var topP: Double = 0.5
    )
}
